Index: src/main/java/za/ac/cput/controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package za.ac.cput.controller;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.multipart.MultipartFile;\r\nimport za.ac.cput.domain.Products;\r\nimport za.ac.cput.service.IProductService;\r\nimport za.ac.cput.service.ProductService;\r\n\r\nimport java.io.IOException;\r\nimport java.time.LocalDate;\r\nimport java.util.List;\r\n\r\n/**\r\n * ProductController.java\r\n *\r\n * @author Rethabile Ntsekhe\r\n * Student Num: 220455430\r\n * @date 26-Jul-24\r\n */\r\n\r\n\r\n@RestController\r\n@RequestMapping(\"/api/products\")\r\npublic class ProductController {\r\n\r\n    private final IProductService productService;\r\n\r\n    @Autowired\r\n    public ProductController(IProductService productService) {\r\n        this.productService = productService;\r\n    }\r\n\r\n    // Create a new product\r\n    @PostMapping\r\n    public ResponseEntity<Products> createProduct(@RequestBody Products product) {\r\n        Products createdProduct = productService.create(product);\r\n        return new ResponseEntity<>(createdProduct, HttpStatus.CREATED);\r\n    }\r\n\r\n    // Read a product by ID\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<Products> getProductById(@PathVariable Long id) {\r\n        Products product = productService.read(id);\r\n        if (product != null) {\r\n            return new ResponseEntity<>(product, HttpStatus.OK);\r\n        } else {\r\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\r\n        }\r\n    }\r\n\r\n    // Update an existing product\r\n    @PutMapping(\"/{id}\")\r\n    public ResponseEntity<Products> updateProduct(@PathVariable Long id, @RequestBody Products product) {\r\n        Products existingProduct = productService.read(id);\r\n        if (existingProduct != null) {\r\n            //update the fields that can be changed\r\n            Products updatedProduct = new Products.Builder()\r\n                    .copy(existingProduct)\r\n                    .setName(product.getName()) //update fields\r\n                    .setDescription(product.getDescription())\r\n                    .setPrice(product.getPrice())\r\n                    .setStockQuantity(product.getStockQuantity())\r\n                    .setCategoryId(product.getCategoryId())\r\n                    .setCreatedAt(product.getCreatedAt())\r\n                    .setUpdatedAt(product.getUpdatedAt())\r\n                    .setImagePath(product.getImagePath())\r\n                    .build();\r\n            //product.setProductId(id); // Ensure we are updating the correct product\r\n            Products updatedProductResponse = productService.update(updatedProduct);\r\n            return new ResponseEntity<>(updatedProductResponse, HttpStatus.OK);\r\n        } else {\r\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\r\n        }\r\n    }\r\n\r\n    // Delete a product by ID\r\n    @DeleteMapping(\"/{id}\")\r\n    public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {\r\n        Products existingProduct = productService.read(id);\r\n        if (existingProduct != null) {\r\n            productService.delete(id);\r\n            return new ResponseEntity<>(HttpStatus.NO_CONTENT);\r\n        } else {\r\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\r\n        }\r\n    }\r\n\r\n    // Get all products\r\n    @GetMapping\r\n    public ResponseEntity<List<Products>> getAllProducts() {\r\n        List<Products> products = productService.findAll();\r\n        return new ResponseEntity<>(products, HttpStatus.OK);\r\n    }\r\n\r\n    // Find products by name\r\n    @GetMapping(\"/name/{name}\")\r\n    public ResponseEntity<List<Products>> getProductsByName(@PathVariable String name) {\r\n        List<Products> products = productService.findByName(name);\r\n        return new ResponseEntity<>(products, HttpStatus.OK);\r\n    }\r\n\r\n    // Find products by category ID\r\n    @GetMapping(\"/category/{categoryId}\")\r\n    public ResponseEntity<List<Products>> getProductsByCategoryId(@PathVariable long categoryId) {\r\n        List<Products> products = productService.findByCategoryId(categoryId);\r\n        return new ResponseEntity<>(products, HttpStatus.OK);\r\n    }\r\n\r\n    // Find products by price range\r\n    //works but it's a bit tricky make sure to create two input when developing front end\r\n    @GetMapping(\"/price\")\r\n    public ResponseEntity<List<Products>> getProductsByPriceRange(@RequestParam double minPrice, @RequestParam double maxPrice) {\r\n        List<Products> products = productService.findByPriceBetween(minPrice, maxPrice);\r\n        return new ResponseEntity<>(products, HttpStatus.OK);\r\n    }\r\n\r\n    // Find products by stock quantity greater than\r\n    @GetMapping(\"/stock\")\r\n    public ResponseEntity<List<Products>> getProductsByStockQuantityGreaterThan(@RequestParam int stockQuantity) {\r\n        List<Products> products = productService.findByStockQuantityGreaterThan(stockQuantity);\r\n        return new ResponseEntity<>(products, HttpStatus.OK);\r\n    }\r\n\r\n    // Find products created after a certain date\r\n    @GetMapping(\"/created-after\")\r\n    public ResponseEntity<List<Products>> getProductsCreatedAfter(@RequestParam LocalDate createdAt) {\r\n        List<Products> products = productService.findByCreatedAtAfter(createdAt);\r\n        return new ResponseEntity<>(products, HttpStatus.OK);\r\n    }\r\n\r\n    // Find products updated before a certain date\r\n    @GetMapping(\"/updated-before\")\r\n    public ResponseEntity<List<Products>> getProductsUpdatedBefore(@RequestParam LocalDate updatedAt) {\r\n        List<Products> products = productService.findByUpdatedAtBefore(updatedAt);\r\n        return new ResponseEntity<>(products, HttpStatus.OK);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/za/ac/cput/controller/ProductController.java b/src/main/java/za/ac/cput/controller/ProductController.java
--- a/src/main/java/za/ac/cput/controller/ProductController.java	
+++ b/src/main/java/za/ac/cput/controller/ProductController.java	
@@ -13,14 +13,6 @@
 import java.time.LocalDate;
 import java.util.List;
 
-/**
- * ProductController.java
- *
- * @author Rethabile Ntsekhe
- * Student Num: 220455430
- * @date 26-Jul-24
- */
-
 
 @RestController
 @RequestMapping("/api/products")
@@ -33,14 +25,12 @@
         this.productService = productService;
     }
 
-    // Create a new product
     @PostMapping
     public ResponseEntity<Products> createProduct(@RequestBody Products product) {
         Products createdProduct = productService.create(product);
         return new ResponseEntity<>(createdProduct, HttpStatus.CREATED);
     }
 
-    // Read a product by ID
     @GetMapping("/{id}")
     public ResponseEntity<Products> getProductById(@PathVariable Long id) {
         Products product = productService.read(id);
@@ -56,7 +46,6 @@
     public ResponseEntity<Products> updateProduct(@PathVariable Long id, @RequestBody Products product) {
         Products existingProduct = productService.read(id);
         if (existingProduct != null) {
-            //update the fields that can be changed
             Products updatedProduct = new Products.Builder()
                     .copy(existingProduct)
                     .setName(product.getName()) //update fields
@@ -68,7 +57,7 @@
                     .setUpdatedAt(product.getUpdatedAt())
                     .setImagePath(product.getImagePath())
                     .build();
-            //product.setProductId(id); // Ensure we are updating the correct product
+
             Products updatedProductResponse = productService.update(updatedProduct);
             return new ResponseEntity<>(updatedProductResponse, HttpStatus.OK);
         } else {
@@ -76,7 +65,6 @@
         }
     }
 
-    // Delete a product by ID
     @DeleteMapping("/{id}")
     public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {
         Products existingProduct = productService.read(id);
@@ -88,50 +76,43 @@
         }
     }
 
-    // Get all products
     @GetMapping
     public ResponseEntity<List<Products>> getAllProducts() {
         List<Products> products = productService.findAll();
         return new ResponseEntity<>(products, HttpStatus.OK);
     }
 
-    // Find products by name
     @GetMapping("/name/{name}")
     public ResponseEntity<List<Products>> getProductsByName(@PathVariable String name) {
         List<Products> products = productService.findByName(name);
         return new ResponseEntity<>(products, HttpStatus.OK);
     }
 
-    // Find products by category ID
     @GetMapping("/category/{categoryId}")
     public ResponseEntity<List<Products>> getProductsByCategoryId(@PathVariable long categoryId) {
         List<Products> products = productService.findByCategoryId(categoryId);
         return new ResponseEntity<>(products, HttpStatus.OK);
     }
 
-    // Find products by price range
-    //works but it's a bit tricky make sure to create two input when developing front end
+
     @GetMapping("/price")
     public ResponseEntity<List<Products>> getProductsByPriceRange(@RequestParam double minPrice, @RequestParam double maxPrice) {
         List<Products> products = productService.findByPriceBetween(minPrice, maxPrice);
         return new ResponseEntity<>(products, HttpStatus.OK);
     }
 
-    // Find products by stock quantity greater than
     @GetMapping("/stock")
     public ResponseEntity<List<Products>> getProductsByStockQuantityGreaterThan(@RequestParam int stockQuantity) {
         List<Products> products = productService.findByStockQuantityGreaterThan(stockQuantity);
         return new ResponseEntity<>(products, HttpStatus.OK);
     }
 
-    // Find products created after a certain date
     @GetMapping("/created-after")
     public ResponseEntity<List<Products>> getProductsCreatedAfter(@RequestParam LocalDate createdAt) {
         List<Products> products = productService.findByCreatedAtAfter(createdAt);
         return new ResponseEntity<>(products, HttpStatus.OK);
     }
-
-    // Find products updated before a certain date
+    
     @GetMapping("/updated-before")
     public ResponseEntity<List<Products>> getProductsUpdatedBefore(@RequestParam LocalDate updatedAt) {
         List<Products> products = productService.findByUpdatedAtBefore(updatedAt);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PWA\">\r\n    <option name=\"enabled\" value=\"true\" />\r\n    <option name=\"wasEnabledAtLeastOnce\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -13,7 +13,7 @@
     <option name="enabled" value="true" />
     <option name="wasEnabledAtLeastOnce" value="true" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2dfc9b97-bcf6-48f1-9f27-38897c268d23\" name=\"Changes\" comment=\"Products.java&#10;ProductFactory&#10;ProductRepository&#10;ProductService&#10;ProductController&#10;Compeleted\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/babel.config.js\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/jsconfig.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/package-lock.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/package.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/public/favicon.ico\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/public/index.html\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/src/App.vue\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/src/assets/logo.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/src/components/FetchUsers.vue\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/src/components/HelloWorld.vue\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/src/main.js\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/front-end/vue.config.js\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/java/za/ac/cput/controller/ProductControllerTest.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/java/za/ac/cput/factory/ProductFactoryTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Addresses.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Addresses.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Shipping_Methods.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Shipping_Methods.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/za/ac/cput/factory/AddressFactory.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/za/ac/cput/factory/AddressFactory.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/resources/application-test.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/resources/application-test.properties\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"Vue Composition API Component\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"REMOTE\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"origin/Rethabile\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Rethabile Ntsekhe\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2jeLJQBTXCGUgEHQFHHpAJIqMs9\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\r\n    \"HTTP Request.African_Art_Craft-endpoints | #1.executor\": \"Run\",\r\n    \"HTTP Request.African_Art_Craft-endpoints_1 | #1.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #10.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #3.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #4.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #5.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #6.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #7.executor\": \"Run\",\r\n    \"HTTP Request.generated-requests | #8.executor\": \"Run\",\r\n    \"JUnit.ProductServiceTest.create.executor\": \"Run\",\r\n    \"JUnit.ProductServiceTest.executor\": \"Run\",\r\n    \"JUnit.UserControllerTest.executor\": \"Run\",\r\n    \"JUnit.UserControllerTest.testCreateUser.executor\": \"Run\",\r\n    \"JUnit.UserServiceTest.executor\": \"Run\",\r\n    \"JUnit.UserServiceTest.testUpdate.executor\": \"Run\",\r\n    \"JUnit.UserfactoryTest.buildUser_Success.executor\": \"Run\",\r\n    \"JUnit.UserfactoryTest.executor\": \"Run\",\r\n    \"JUnit.UsersControllerTest.executor\": \"Run\",\r\n    \"JUnit.UsersControllerTest.testGetAllUsers.executor\": \"Debug\",\r\n    \"OverrideImplement.generate.javadoc\": \"true\",\r\n    \"RequestMappingsPanelOrder0\": \"0\",\r\n    \"RequestMappingsPanelOrder1\": \"1\",\r\n    \"RequestMappingsPanelWidth0\": \"75\",\r\n    \"RequestMappingsPanelWidth1\": \"75\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"Spring Boot.Application.executor\": \"Run\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"settings.editor.selected.configurable\": \"terminal\",\r\n    \"ts.external.directory.path\": \"C:\\\\Program Files\\\\JetBrains\\\\IntelliJ IDEA 2023.3.3\\\\plugins\\\\javascript-impl\\\\jsLanguageServicesImpl\\\\external\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"vue.recent.templates\": [\r\n      \"Vue Composition API Component\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\retha\\Documents\\JetBrains Academy\\African Art Craft\\src\\test\\resources\" />\r\n      <recent name=\"C:\\Users\\retha\\Documents\\JetBrains Academy\\African Art Craft\\src\\main\\resources\\static\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"za.ac.cput.controller\" />\r\n      <recent name=\"za.ac.cput.factory\" />\r\n      <recent name=\"za.ac.cput.service\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"HTTP Request.generated-requests | #10\">\r\n    <configuration name=\"generated-requests | #10\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" index=\"10\" requestIdentifier=\"#10\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"generated-requests | #5\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" index=\"5\" requestIdentifier=\"#5\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"generated-requests | #6\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" index=\"6\" requestIdentifier=\"#6\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"generated-requests | #7\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" index=\"7\" requestIdentifier=\"#7\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"generated-requests | #8\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" nameIsGenerated=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" index=\"8\" requestIdentifier=\"#8\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"African Art Craft\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"African Art Craft\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"HTTP Request.generated-requests | #10\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests | #8\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests | #7\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests | #6\" />\r\n        <item itemvalue=\"HTTP Request.generated-requests | #5\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4\" />\r\n        <option value=\"jdk-17.0.9-jbr-17.0.9-4caba194b151-51f1b679\" />\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2dfc9b97-bcf6-48f1-9f27-38897c268d23\" name=\"Changes\" comment=\"\" />\r\n      <created>1721742614727</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1721742614727</updated>\r\n      <workItem from=\"1721742618882\" duration=\"8515000\" />\r\n      <workItem from=\"1721757997688\" duration=\"473000\" />\r\n      <workItem from=\"1721832616636\" duration=\"20368000\" />\r\n      <workItem from=\"1721908721609\" duration=\"17338000\" />\r\n      <workItem from=\"1721991810690\" duration=\"19120000\" />\r\n      <workItem from=\"1722021501334\" duration=\"4527000\" />\r\n      <workItem from=\"1722084459134\" duration=\"19540000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721743074602</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721743074602</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721743292282</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721743292282</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"first&#10;&#10;Signed-off-by: Twist1154n &lt;rethabile1154n@gmail.com&gt;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721743330532</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721743330532</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721743415875</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721743415875</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721747467372</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721747467372</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721748795933</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721748795933</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721750247447</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721750247447</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721750329670</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721750329670</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721758324490</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721758324490</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Structure\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721758406516</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721758406516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Domain classes Complete\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721836909486</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721836909486</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Domain classes Complete\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721837131327</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721837131327</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"application.properties and main App completed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721837794505</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721837794505</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"helper and factory complete\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721838164356</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721838164356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"helper and factory complete\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721838252274</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721838252274</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721840774329</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721840774329</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"IRepository and IService Completed &#10;to be used for local testing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721841548258</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721841548258</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"User Repo done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721841854858</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721841854858</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"implements Serializable\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721844098981</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721844098981</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"everthing works upto service layer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721849703719</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721849703719</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"All Domains completed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721996895103</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721996895103</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"All Domains completed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721997212091</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721997212091</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"All Factories classes completed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1722002315226</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1722002315226</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"All Factories classes completed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1722014454716</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1722014454747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Products.java&#10;ProductFactory&#10;ProductRepository&#10;ProductService&#10;ProductController&#10;Compeleted\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1722093816110</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1722093816110</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Products.java&#10;ProductFactory&#10;ProductRepository&#10;ProductService&#10;ProductController&#10;Compeleted\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1722101877430</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1722101877430</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"27\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"first\" />\r\n    <MESSAGE value=\"first&#10;&#10;Signed-off-by: Twist1154n &lt;rethabile1154n@gmail.com&gt;\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'\" />\r\n    <MESSAGE value=\"Structure&#10;&#10;Signed-off-by: Twist1154n &lt;rethabile1154n@gmail.com&gt;\" />\r\n    <MESSAGE value=\"Structure\" />\r\n    <MESSAGE value=\"Domain classes Complete\" />\r\n    <MESSAGE value=\"application.properties and main App completed\" />\r\n    <MESSAGE value=\"helper and factory complete\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"IRepository and IService Completed &#10;to be used for local testing\" />\r\n    <MESSAGE value=\"User Repo done\" />\r\n    <MESSAGE value=\"implements Serializable\" />\r\n    <MESSAGE value=\"everthing works upto service layer\" />\r\n    <MESSAGE value=\"All Domains completed\" />\r\n    <MESSAGE value=\"All Factories classes completed\" />\r\n    <MESSAGE value=\"Products.java&#10;ProductFactory&#10;ProductRepository&#10;ProductService&#10;ProductController&#10;Compeleted\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Products.java&#10;ProductFactory&#10;ProductRepository&#10;ProductService&#10;ProductController&#10;Compeleted\" />\r\n    <option name=\"REFORMAT_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" log-stack=\"true\" type=\"java-exception\">\r\n          <properties class=\"org.springframework.beans.factory.BeanCreationException\" package=\"org.springframework.beans.factory\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n      <default-breakpoints>\r\n        <breakpoint log-message=\"true\" log-stack=\"true\" type=\"java-exception\" />\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,29 +5,22 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2dfc9b97-bcf6-48f1-9f27-38897c268d23" name="Changes" comment="Products.java&#10;ProductFactory&#10;ProductRepository&#10;ProductService&#10;ProductController&#10;Compeleted">
-      <change afterPath="$PROJECT_DIR$/src/front-end/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/babel.config.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/jsconfig.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/package-lock.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/package.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/public/favicon.ico" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/public/index.html" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/src/App.vue" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/src/assets/logo.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/src/components/FetchUsers.vue" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/src/components/HelloWorld.vue" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/src/main.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/front-end/vue.config.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/java/za/ac/cput/controller/ProductControllerTest.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/java/za/ac/cput/factory/ProductFactoryTest.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/controller/ProductController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/controller/ProductController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Addresses.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Addresses.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Cart_Items.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Cart_Items.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Discounts.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Discounts.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Order_Items.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Order_Items.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Reviews.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Reviews.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Shipping_Methods.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Shipping_Methods.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/factory/AddressFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/factory/AddressFactory.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/resources/application-test.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/resources/application-test.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Users.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Users.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Wishlist_Items.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/domain/Wishlist_Items.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/za/ac/cput/factory/Userfactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/za/ac/cput/factory/Userfactory.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/za/ac/cput/controller/ProductControllerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/za/ac/cput/controller/ProductControllerTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/za/ac/cput/factory/ProductFactoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/za/ac/cput/factory/ProductFactoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/za/ac/cput/factory/UserfactoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/za/ac/cput/factory/UserfactoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/za/ac/cput/service/UserServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/za/ac/cput/service/UserServiceTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -82,61 +75,63 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "DefaultHtmlFileTemplate": "HTML File",
-    "HTTP Request.African_Art_Craft-endpoints | #1.executor": "Run",
-    "HTTP Request.African_Art_Craft-endpoints_1 | #1.executor": "Run",
-    "HTTP Request.generated-requests | #10.executor": "Run",
-    "HTTP Request.generated-requests | #3.executor": "Run",
-    "HTTP Request.generated-requests | #4.executor": "Run",
-    "HTTP Request.generated-requests | #5.executor": "Run",
-    "HTTP Request.generated-requests | #6.executor": "Run",
-    "HTTP Request.generated-requests | #7.executor": "Run",
-    "HTTP Request.generated-requests | #8.executor": "Run",
-    "JUnit.ProductServiceTest.create.executor": "Run",
-    "JUnit.ProductServiceTest.executor": "Run",
-    "JUnit.UserControllerTest.executor": "Run",
-    "JUnit.UserControllerTest.testCreateUser.executor": "Run",
-    "JUnit.UserServiceTest.executor": "Run",
-    "JUnit.UserServiceTest.testUpdate.executor": "Run",
-    "JUnit.UserfactoryTest.buildUser_Success.executor": "Run",
-    "JUnit.UserfactoryTest.executor": "Run",
-    "JUnit.UsersControllerTest.executor": "Run",
-    "JUnit.UsersControllerTest.testGetAllUsers.executor": "Debug",
-    "OverrideImplement.generate.javadoc": "true",
-    "RequestMappingsPanelOrder0": "0",
-    "RequestMappingsPanelOrder1": "1",
-    "RequestMappingsPanelWidth0": "75",
-    "RequestMappingsPanelWidth1": "75",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Spring Boot.Application.executor": "Run",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
-    "git-widget-placeholder": "master",
-    "ignore.virus.scanning.warn.message": "true",
-    "kotlin-language-version-configured": "true",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Project",
-    "project.structure.proportion": "0.0",
-    "project.structure.side.proportion": "0.0",
-    "settings.editor.selected.configurable": "terminal",
-    "ts.external.directory.path": "C:\\Program Files\\JetBrains\\IntelliJ IDEA 2023.3.3\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
+    &quot;HTTP Request.African_Art_Craft-endpoints | #1.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.African_Art_Craft-endpoints_1 | #1.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #10.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #3.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #4.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #5.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #6.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #7.executor&quot;: &quot;Run&quot;,
+    &quot;HTTP Request.generated-requests | #8.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.ProductControllerTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.ProductFactoryTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.ProductServiceTest.create.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.ProductServiceTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UserControllerTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UserControllerTest.testCreateUser.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UserServiceTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UserServiceTest.testUpdate.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UserfactoryTest.buildUser_Success.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UserfactoryTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UsersControllerTest.executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.UsersControllerTest.testGetAllUsers.executor&quot;: &quot;Debug&quot;,
+    &quot;OverrideImplement.generate.javadoc&quot;: &quot;true&quot;,
+    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
+    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
+    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
+    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Spring Boot.Application.executor&quot;: &quot;Run&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;terminal&quot;,
+    &quot;ts.external.directory.path&quot;: &quot;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2023.3.3\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   },
-  "keyToStringList": {
-    "vue.recent.templates": [
-      "Vue Composition API Component"
+  &quot;keyToStringList&quot;: {
+    &quot;vue.recent.templates&quot;: [
+      &quot;Vue Composition API Component&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CreateTestDialog.Recents.Supers">
       <recent name="" />
@@ -151,21 +146,66 @@
       <recent name="za.ac.cput.service" />
     </key>
   </component>
-  <component name="RunManager" selected="HTTP Request.generated-requests | #10">
-    <configuration name="generated-requests | #10" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http" index="10" requestIdentifier="#10" runType="Run single request">
-      <method v="2" />
+  <component name="RunManager" selected="JUnit.UserServiceTest">
+    <configuration name="ProductControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="African-Arts-Craft" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="za.ac.cput.controller.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="za.ac.cput.controller" />
+      <option name="MAIN_CLASS_NAME" value="za.ac.cput.controller.ProductControllerTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
-    <configuration name="generated-requests | #5" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http" index="5" requestIdentifier="#5" runType="Run single request">
-      <method v="2" />
-    </configuration>
-    <configuration name="generated-requests | #6" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http" index="6" requestIdentifier="#6" runType="Run single request">
-      <method v="2" />
+    <configuration name="ProductServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="African-Arts-Craft" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="za.ac.cput.service.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="za.ac.cput.service" />
+      <option name="MAIN_CLASS_NAME" value="za.ac.cput.service.ProductServiceTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
-    <configuration name="generated-requests | #7" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http" index="7" requestIdentifier="#7" runType="Run single request">
-      <method v="2" />
+    <configuration name="UserServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="African-Arts-Craft" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="za.ac.cput.service.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="za.ac.cput.service" />
+      <option name="MAIN_CLASS_NAME" value="za.ac.cput.service.UserServiceTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
-    <configuration name="generated-requests | #8" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http" index="8" requestIdentifier="#8" runType="Run single request">
-      <method v="2" />
+    <configuration name="UserfactoryTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="African-Arts-Craft" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="za.ac.cput.factory.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="za.ac.cput.factory" />
+      <option name="MAIN_CLASS_NAME" value="za.ac.cput.factory.UserfactoryTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
     <configuration default="true" type="JetRunConfigurationType">
       <module name="African Art Craft" />
@@ -180,13 +220,26 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="Application" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
+      <module name="African-Arts-Craft" />
+      <option name="SPRING_BOOT_MAIN_CLASS" value="za.ac.cput.Application" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="za.ac.cput.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="HTTP Request.generated-requests | #10" />
-        <item itemvalue="HTTP Request.generated-requests | #8" />
-        <item itemvalue="HTTP Request.generated-requests | #7" />
-        <item itemvalue="HTTP Request.generated-requests | #6" />
-        <item itemvalue="HTTP Request.generated-requests | #5" />
+        <item itemvalue="JUnit.UserServiceTest" />
+        <item itemvalue="JUnit.UserfactoryTest" />
+        <item itemvalue="JUnit.ProductServiceTest" />
+        <item itemvalue="JUnit.ProductControllerTest" />
+        <item itemvalue="Spring Boot.Application" />
       </list>
     </recent_temporary>
   </component>
@@ -194,7 +247,6 @@
     <attachedChunks>
       <set>
         <option value="jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4" />
-        <option value="jdk-17.0.9-jbr-17.0.9-4caba194b151-51f1b679" />
         <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
       </set>
     </attachedChunks>
@@ -214,6 +266,19 @@
       <workItem from="1721991810690" duration="19120000" />
       <workItem from="1722021501334" duration="4527000" />
       <workItem from="1722084459134" duration="19540000" />
+      <workItem from="1722107518414" duration="191000" />
+      <workItem from="1722178896465" duration="23000" />
+      <workItem from="1722181104514" duration="1762000" />
+      <workItem from="1722362962624" duration="51000" />
+      <workItem from="1722363839777" duration="3415000" />
+      <workItem from="1722449176708" duration="305000" />
+      <workItem from="1722611132627" duration="604000" />
+      <workItem from="1722702000052" duration="1494000" />
+      <workItem from="1722784764863" duration="11704000" />
+      <workItem from="1722841493579" duration="2216000" />
+      <workItem from="1722963063773" duration="1382000" />
+      <workItem from="1723057420051" duration="1968000" />
+      <workItem from="1723059557630" duration="19000" />
     </task>
     <task id="LOCAL-00001" summary="first">
       <option name="closed" value="true" />
Index: src/test/java/za/ac/cput/factory/ProductFactoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package za.ac.cput.factory;\r\n\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\nclass ProductFactoryTest {\r\n\r\n    @Test\r\n    void buildProduct() {\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/za/ac/cput/factory/ProductFactoryTest.java b/src/test/java/za/ac/cput/factory/ProductFactoryTest.java
--- a/src/test/java/za/ac/cput/factory/ProductFactoryTest.java	
+++ b/src/test/java/za/ac/cput/factory/ProductFactoryTest.java	
@@ -1,12 +1,70 @@
 package za.ac.cput.factory;
 
 import org.junit.jupiter.api.Test;
+import za.ac.cput.domain.Products;
+
+import java.time.LocalDate;
 
 import static org.junit.jupiter.api.Assertions.*;
 
 class ProductFactoryTest {
 
     @Test
-    void buildProduct() {
+    void buildProduct_Success() {
+        long productId = 1;
+        String name = "African Necklace";
+        String description = "Handmade African necklace";
+        double price = 250.00;
+        int stockQuantity = 20;
+        long categoryId = 1;
+        LocalDate createdAt = LocalDate.of(2024, 7, 24);
+        LocalDate updatedAt = LocalDate.of(2024, 8, 24);
+        String imagePath = "images/african_necklace.jpg";
+
+        Products product = ProductFactory.buildProduct(productId, name, description, price, stockQuantity, categoryId, createdAt, updatedAt, imagePath);
+
+        assertNotNull(product);
+        assertEquals(name, product.getName());
+        assertEquals(description, product.getDescription());
+        assertEquals(price, product.getPrice());
+        assertEquals(stockQuantity, product.getStockQuantity());
+        assertEquals(categoryId, product.getCategoryId());
+        assertEquals(createdAt, product.getCreatedAt());
+        assertEquals(updatedAt, product.getUpdatedAt());
+        assertEquals(imagePath, product.getImagePath());
     }
-}
\ No newline at end of file
+
+    @Test
+    void buildProduct_Failure_NullFields() {
+        long productId = 1;
+        String name = null;
+        String description = "Handmade African necklace";
+        double price = 250.00;
+        int stockQuantity = 20;
+        long categoryId = 1;
+        LocalDate createdAt = LocalDate.of(2024, 7, 24);
+        LocalDate updatedAt = LocalDate.of(2024, 8, 24);
+        String imagePath = "images/african_necklace.jpg";
+
+        Products product = ProductFactory.buildProduct(productId, name, description, price, stockQuantity, categoryId, createdAt, updatedAt, imagePath);
+
+        assertNull(product);
+    }
+
+    @Test
+    void buildProduct_Failure_InvalidPrice() {
+        long productId = 1;
+        String name = "African Necklace";
+        String description = "Handmade African necklace";
+        double price = -250.00;
+        int stockQuantity = 20;
+        long categoryId = 1;
+        LocalDate createdAt = LocalDate.of(2024, 7, 24);
+        LocalDate updatedAt = LocalDate.of(2024, 8, 24);
+        String imagePath = "images/african_necklace.jpg";
+
+        Products product = ProductFactory.buildProduct(productId, name, description, price, stockQuantity, categoryId, createdAt, updatedAt, imagePath);
+
+        assertNull(product);
+    }
+}
Index: src/test/java/za/ac/cput/controller/ProductControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package za.ac.cput.controller;\r\n\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\nclass ProductControllerTest {\r\n\r\n    @Test\r\n    void createProduct() {\r\n    }\r\n\r\n    @Test\r\n    void getProductById() {\r\n    }\r\n\r\n    @Test\r\n    void updateProduct() {\r\n    }\r\n\r\n    @Test\r\n    void deleteProduct() {\r\n    }\r\n\r\n    @Test\r\n    void getAllProducts() {\r\n    }\r\n\r\n    @Test\r\n    void getProductsByName() {\r\n    }\r\n\r\n    @Test\r\n    void getProductsByCategoryId() {\r\n    }\r\n\r\n    @Test\r\n    void getProductsByPriceRange() {\r\n    }\r\n\r\n    @Test\r\n    void getProductsByStockQuantityGreaterThan() {\r\n    }\r\n\r\n    @Test\r\n    void getProductsCreatedAfter() {\r\n    }\r\n\r\n    @Test\r\n    void getProductsUpdatedBefore() {\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/za/ac/cput/controller/ProductControllerTest.java b/src/test/java/za/ac/cput/controller/ProductControllerTest.java
--- a/src/test/java/za/ac/cput/controller/ProductControllerTest.java	
+++ b/src/test/java/za/ac/cput/controller/ProductControllerTest.java	
@@ -1,52 +1,226 @@
 package za.ac.cput.controller;
 
+import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
+import org.mockito.InjectMocks;
+import org.mockito.Mock;
+import org.mockito.MockitoAnnotations;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import za.ac.cput.domain.Products;
+import za.ac.cput.service.ProductService;
+
+import java.time.LocalDate;
+import java.util.Arrays;
+import java.util.List;
 
 import static org.junit.jupiter.api.Assertions.*;
+import static org.mockito.Mockito.*;
 
 class ProductControllerTest {
 
+    @Mock
+    private ProductService productService;
+
+    @InjectMocks
+    private ProductController productController;
+
+    private Products product;
+
+    @BeforeEach
+    void setUp() {
+        MockitoAnnotations.openMocks(this);
+        product = new Products.Builder()
+                .setProductId(1L)
+                .setName("African Necklace")
+                .setDescription("Handmade African necklace")
+                .setPrice(250.00)
+                .setStockQuantity(20)
+                .setCategoryId(1L)
+                .setCreatedAt(LocalDate.of(2024, 7, 24))
+                .setUpdatedAt(LocalDate.of(2024, 8, 24))
+                .setImagePath("images/african_necklace.jpg")
+                .build();
+    }
+
+    @Test
+    void testCreateProduct() {
+        when(productService.create(any(Products.class))).thenReturn(product);
+
+        ResponseEntity<Products> response = productController.createProduct(product);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.CREATED, response.getStatusCode());
+        assertEquals(product, response.getBody());
+        verify(productService, times(1)).create(any(Products.class));
+    }
+
     @Test
-    void createProduct() {
+    void testGetProductById() {
+        when(productService.read(anyLong())).thenReturn(product);
+
+        ResponseEntity<Products> response = productController.getProductById(1L);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, response.getStatusCode());
+        assertEquals(product, response.getBody());
+        verify(productService, times(1)).read(1L);
     }
 
     @Test
-    void getProductById() {
+    void testGetProductById_NotFound() {
+        when(productService.read(anyLong())).thenReturn(null);
+
+        ResponseEntity<Products> response = productController.getProductById(1L);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());
+        verify(productService, times(1)).read(1L);
     }
 
     @Test
-    void updateProduct() {
+    void testUpdateProduct() {
+        Products updatedProduct = new Products.Builder()
+                .copy(product)
+                .setName("Updated African Necklace")
+                .build();
+
+        when(productService.read(anyLong())).thenReturn(product);
+        when(productService.update(any(Products.class))).thenReturn(updatedProduct);
+
+        ResponseEntity<Products> response = productController.updateProduct(1L, updatedProduct);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, response.getStatusCode());
+        assertEquals(updatedProduct, response.getBody());
+        verify(productService, times(1)).read(1L);
+        verify(productService, times(1)).update(any(Products.class));
     }
 
     @Test
-    void deleteProduct() {
+    void testUpdateProduct_NotFound() {
+        when(productService.read(anyLong())).thenReturn(null);
+
+        ResponseEntity<Products> response = productController.updateProduct(1L, product);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());
+        verify(productService, times(1)).read(1L);
+        verify(productService, times(0)).update(any(Products.class));
     }
 
     @Test
-    void getAllProducts() {
+    void testDeleteProduct() {
+        when(productService.read(anyLong())).thenReturn(product);
+
+        ResponseEntity<Void> response = productController.deleteProduct(1L);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.NO_CONTENT, response.getStatusCode());
+        verify(productService, times(1)).read(1L);
+        verify(productService, times(1)).delete(1L);
     }
 
     @Test
-    void getProductsByName() {
+    void testDeleteProduct_NotFound() {
+        when(productService.read(anyLong())).thenReturn(null);
+
+        ResponseEntity<Void> response = productController.deleteProduct(1L);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());
+        verify(productService, times(1)).read(1L);
+        verify(productService, times(0)).delete(1L);
     }
 
     @Test
-    void getProductsByCategoryId() {
+    void testGetAllProducts() {
+        List<Products> products = Arrays.asList(product);
+        when(productService.findAll()).thenReturn(products);
+
+        ResponseEntity<List<Products>> response = productController.getAllProducts();
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, response.getStatusCode());
+        assertEquals(products, response.getBody());
+        verify(productService, times(1)).findAll();
     }
 
     @Test
-    void getProductsByPriceRange() {
+    void testGetProductsByName() {
+        List<Products> products = Arrays.asList(product);
+        when(productService.findByName(anyString())).thenReturn(products);
+
+        ResponseEntity<List<Products>> response = productController.getProductsByName("African Necklace");
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, response.getStatusCode());
+        assertEquals(products, response.getBody());
+        verify(productService, times(1)).findByName("African Necklace");
     }
 
     @Test
-    void getProductsByStockQuantityGreaterThan() {
+    void testGetProductsByCategoryId() {
+        List<Products> products = Arrays.asList(product);
+        when(productService.findByCategoryId(anyLong())).thenReturn(products);
+
+        ResponseEntity<List<Products>> response = productController.getProductsByCategoryId(1L);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, response.getStatusCode());
+        assertEquals(products, response.getBody());
+        verify(productService, times(1)).findByCategoryId(1L);
     }
 
     @Test
-    void getProductsCreatedAfter() {
+    void testGetProductsByPriceRange() {
+        List<Products> products = Arrays.asList(product);
+        when(productService.findByPriceBetween(anyDouble(), anyDouble())).thenReturn(products);
+
+        ResponseEntity<List<Products>> response = productController.getProductsByPriceRange(200.00, 300.00);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, response.getStatusCode());
+        assertEquals(products, response.getBody());
+        verify(productService, times(1)).findByPriceBetween(200.00, 300.00);
     }
 
     @Test
-    void getProductsUpdatedBefore() {
+    void testGetProductsByStockQuantityGreaterThan() {
+        List<Products> products = Arrays.asList(product);
+        when(productService.findByStockQuantityGreaterThan(anyInt())).thenReturn(products);
+
+        ResponseEntity<List<Products>> response = productController.getProductsByStockQuantityGreaterThan(10);
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, response.getStatusCode());
+        assertEquals(products, response.getBody());
+        verify(productService, times(1)).findByStockQuantityGreaterThan(10);
     }
-}
\ No newline at end of file
+
+    @Test
+    void testGetProductsCreatedAfter() {
+        List<Products> products = Arrays.asList(product);
+        when(productService.findByCreatedAtAfter(any(LocalDate.class))).thenReturn(products);
+
+        ResponseEntity<List<Products>> response = productController.getProductsCreatedAfter(LocalDate.of(2024, 7, 1));
+
+        assertNotNull(response);
+        assertEquals(HttpStatus.OK, resp